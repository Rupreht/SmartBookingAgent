# Generated by Django 5.2.5 on 2025-09-05 18:08

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ServiceLocation",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255, verbose_name="Название места")),
                ("description", models.TextField(blank=True, verbose_name="Описание места")),
                ("city", models.CharField(blank=True, max_length=255, verbose_name="Город")),
                ("rest_of_address", models.CharField(blank=True, max_length=512, verbose_name="Улица, дом, квартира")),
                ("latitude", models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name="Широта")),
                ("longitude", models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name="Долгота")),
                ("capacity", models.PositiveIntegerField(default=1, verbose_name="Вместимость")),
            ],
            options={
                "verbose_name": "Место оказания услуги",
                "verbose_name_plural": "Места оказания услуг",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="TelegramUser",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("is_bot", models.BooleanField()),
                ("first_name", models.CharField(max_length=64)),
                ("last_name", models.CharField(max_length=64)),
                ("username", models.CharField(max_length=32)),
                ("language_code", models.CharField(blank=True, max_length=15, null=True)),
                ("is_premium", models.BooleanField(default=False)),
                ("added_to_attachment_menu", models.BooleanField(default=False)),
                ("can_join_groups", models.BooleanField(default=False)),
                ("can_read_all_group_messages", models.BooleanField(default=False)),
                ("supports_inline_queries", models.BooleanField(default=False)),
                ("can_connect_to_business", models.BooleanField(default=False)),
                ("has_main_web_app", models.BooleanField(default=False)),
                ("bio", models.CharField(max_length=70)),
                ("datetime_joined", models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name="RentalObject",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255, verbose_name="Название")),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                ("minimum_rental_duration", models.TimeField(verbose_name="Минимальное время аренды")),
                (
                    "current_location",
                    models.ManyToManyField(
                        blank=True, related_name="current_location", to="bot_admin.servicelocation", verbose_name="Где находится"
                    ),
                ),
            ],
            options={
                "verbose_name": "Объект аренды",
                "verbose_name_plural": "Объекты аренды",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="TelegramUserProfilePhotos",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("file_id", models.CharField()),
                ("file_unique_id", models.CharField()),
                ("width", models.SmallIntegerField()),
                ("height", models.SmallIntegerField()),
                ("file_size", models.SmallIntegerField()),
                ("tg_user_id", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="bot_admin.telegramuser")),
            ],
        ),
        migrations.CreateModel(
            name="WorkDay",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "day",
                    models.IntegerField(
                        choices=[
                            (0, "Понедельник"),
                            (1, "Вторник"),
                            (2, "Среда"),
                            (3, "Четверг"),
                            (4, "Пятница"),
                            (5, "Суббота"),
                            (6, "Воскресенье"),
                        ],
                        verbose_name="День недели",
                    ),
                ),
                ("start_time", models.TimeField(blank=True, null=True, verbose_name="Время начала работы")),
                ("end_time", models.TimeField(blank=True, null=True, verbose_name="Время окончания работы")),
            ],
            options={
                "verbose_name": "Рабочее время",
                "verbose_name_plural": "Рабочие времена",
                "ordering": ["day"],
                "unique_together": {("day", "start_time", "end_time")},
            },
        ),
        migrations.AddField(
            model_name="servicelocation",
            name="available_days",
            field=models.ManyToManyField(
                blank=True, related_name="service_locations", to="bot_admin.workday", verbose_name="Доступные дни недели"
            ),
        ),
    ]
