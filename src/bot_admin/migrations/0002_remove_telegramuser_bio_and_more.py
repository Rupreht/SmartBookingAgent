# Generated by Django 5.2.5 on 2025-09-05 19:43

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("bot_admin", "0001_initial"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="telegramuser",
            name="bio",
        ),
        migrations.AlterField(
            model_name="telegramuser",
            name="added_to_attachment_menu",
            field=models.BooleanField(blank=True, help_text="Optional. True, if this user added the bot to the attachment menu", null=True),
        ),
        migrations.AlterField(
            model_name="telegramuser",
            name="can_connect_to_business",
            field=models.BooleanField(
                blank=True,
                help_text="Optional. True, if the bot can be connected to a Telegram Business\n            account to receive its messages.\n            Returned only in getMe.",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="telegramuser",
            name="can_join_groups",
            field=models.BooleanField(
                blank=True, help_text="Optional. True, if the bot can be invited to groups. Returned only in getMe.", null=True
            ),
        ),
        migrations.AlterField(
            model_name="telegramuser",
            name="can_read_all_group_messages",
            field=models.BooleanField(
                blank=True, help_text="Optional. True, if privacy mode is disabled for the bot. Returned only in getMe.", null=True
            ),
        ),
        migrations.AlterField(
            model_name="telegramuser",
            name="first_name",
            field=models.CharField(help_text="User's or bot's first name", max_length=64),
        ),
        migrations.AlterField(
            model_name="telegramuser",
            name="has_main_web_app",
            field=models.BooleanField(
                blank=True, help_text="Optional. True, if the bot has a main Web App. Returned only in getMe.", null=True
            ),
        ),
        migrations.AlterField(
            model_name="telegramuser",
            name="id",
            field=models.BigIntegerField(
                help_text="\n            Unique identifier for this user or bot.\n            This number may have more than 32 significant bits and some programming\n            languages may have difficulty/silent defects in interpreting it.\n            But it has at most 52 significant bits, so a 64-bit integer or double-precision\n            float type are safe for storing this identifier.",
                primary_key=True,
                serialize=False,
            ),
        ),
        migrations.AlterField(
            model_name="telegramuser",
            name="is_bot",
            field=models.BooleanField(help_text="True, if this user is a bot"),
        ),
        migrations.AlterField(
            model_name="telegramuser",
            name="is_premium",
            field=models.BooleanField(blank=True, help_text="Optional. True, if this user is a Telegram Premium user", null=True),
        ),
        migrations.AlterField(
            model_name="telegramuser",
            name="language_code",
            field=models.CharField(blank=True, help_text="Optional. IETF language tag of the user's language", max_length=15, null=True),
        ),
        migrations.AlterField(
            model_name="telegramuser",
            name="last_name",
            field=models.CharField(blank=True, help_text="Optional. User's or bot's last name", max_length=64, null=True),
        ),
        migrations.AlterField(
            model_name="telegramuser",
            name="supports_inline_queries",
            field=models.BooleanField(
                blank=True, help_text="Optional. True, if the bot supports inline queries. Returned only in getMe.", null=True
            ),
        ),
        migrations.AlterField(
            model_name="telegramuser",
            name="username",
            field=models.CharField(blank=True, help_text="Optional. User's or bot's username", max_length=32, null=True),
        ),
    ]
